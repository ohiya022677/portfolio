/* 全ての要素（疑似要素含む）を対象とする */
*, *::before, *::after {
    margin: 0; /* 外部余白のリセット */
    padding: 0; /* 内部余白のリセット */
    box-sizing: border-box; /* widthやheightなどのサイズ指定をボーダーを含んだサイズで指定できるように変更 */
  }
  
  /* Webページ全体の設定を記載 */
  :root { /* htmlを指定した場合と同じような意味合いです */
    /* 書体の設定 */
    font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", YuGothic, "ヒラギノ角ゴ ProN W3", Hiragino Kaku Gothic ProN, Arial, "メイリオ", Meiryo, sans-serif;
    /* 日本語の字詰を自動カーニングするように設定 */
    font-feature-settings: "palt";
    /* 標準の文字サイズを指定 */
    font-size: 14pt;
  
    /* 文字の色を変数に入れておく */
    --text-color: #00ffcc;
  }

  body {
    background-image: url("hana.jpg");  /* 背景画像設定 */
    background-size: cover; /* 背景画像のサイズを全体にフィットするように設定 */
    background-attachment: fixed; /* 背景画像をスクロールしても同じ位置になるように設定 */
    background-position: center center; /* 背景画像の配置が中央配置になるように設定 */
    
    display: grid; /* grid表示化 */
    place-items: center; /* bodyタグ直下に配置される要素を中央配置させる（grid表示化が必要） */
  
    min-height: 100vh; /* 最低高さを表示領域の100%に設定（vh:ビューハイト） */
  
    color: var(--text-color); /* ドキュメント全体の文字色を設定 varは変数を使用するときに使います */
  }

  main {
    display: grid; /* grid表示化 */
    /* Grid表示のコンテンツ配置テンプレートを作成する */
    grid-template: "photo   name   " auto
                   "photo   texts  " auto
                   "photo   social " auto
                   / 300px minmax(300px, 450px);
    gap: 0 2rem;  /* コンテンツ配置の隙間サイズを指定（行間:0,列間:2文字分） */
  
    padding: 2rem;  /* 内側余白を2文字分 */
    max-width: 90%; /*親要素（body）の90%が最大横幅となるように調整（小さい画面への配慮） */
  
    
    backdrop-filter: blur(20px);  /* 背景をすりガラス状に設定 */
    border: 1px solid rgba(4, 0, 254, 0.2); /* 枠線をさりげなく指定 */
    border-right-color: rgba(99, 97, 253, 0.2); /* 枠線の色をさりげなく指定 */
    border-bottom-color: rgba(3, 0, 163, 0.2);  /* 枠線の色をさりげなく指定 */
    border-radius: 8px; /* 角丸8px */
  }
  
  /* モバイルでの表示時にレイアウトを変更する（同じ詳細度で後から指定されたものが優先されることを利用） */
  @media screen and (width < 896px) { /* 画面幅が896px未満の場合、下記CSSを使用する */
    main {
      /* モバイル表示用のGrid表示のコンテンツ配置テンプレートに変更する */
      grid-template: "photo  " auto
                     "name   " auto
                     "texts  " auto
                     "social " auto
                     / auto;
      gap: 1rem 0;  /* コンテンツ配置の隙間サイズを変更（行間:1文字分,列間:0） */
  
      margin: 4rem 0; /* 外側の余白上下4文字分付ける（左右は0） */
    }
  }

  /* class="my-photo" */
.my-photo {
    grid-area: photo;  /* Gridテンプレートの「photo」に配置 */
    align-self: center; /* 内部の上下配置を中央寄せにする */
  }
  
  /* class="my-photo" の中の img */
  .my-photo img {
    display: block; /* 画像自体を箱として表示させる */
    width: 320px; /* 横幅の設定 */
    height: 320px; /* 高さの設定 */
    border-radius: 150px; /* 角丸を縦横のサイズの半分以上の値を指定することで正方形の画像は円にくり抜かれる、99999pxなどでもOK */
  }
  
  /* モバイルでの表示時にサイズを調整する */
  @media screen and (width < 896px) { /* 画面幅が896px未満の場合、下記CSSを使用する */
    .my-photo img {
      width: 70vw; /* 横幅の設定を画面横サイズの70% */
      height: 70vw; /* 高さの設定を画面横サイズの70% */
    }
  }

  .my-name {
    grid-area: name; /* mainタグのGridテンプレートの「name」に配置 */
    font-size: 4rem; /* 文字サイズを基準サイズの400%とする */
    text-shadow: -1px 1px 0 #232323; /* 文字の影をさりげなく入れ、ちょっとだけ立体っぽく見せる */
    letter-spacing: 0.1em; /* 字間を0.1文字分開ける */
  }
  /* モバイルでの表示時にレイアウトを変更する */
  @media screen and (width < 896px) { /* 画面幅が896px未満の場合、下記CSSを使用する */
    .my-name {
      font-size: 13.5vw; /* 文字サイズを画面サイズの13.5％幅とする */
      text-align: center; /* 文字の配置をセンタリングする */
    }
  }
  
  .my-texts {
    grid-area: texts; /* mainタグのGridテンプレートの「texts」に配置 */
  }

  .my-social {
    grid-area: social;  /* mainタグのGridテンプレートの「social」に配置 */
    list-style: none; /* リストの・が邪魔なので消します */
    display: flex; /* .my-social内部をフレキシブル表示に切り替え（標準で横並びになります） */
    margin-top: 1.5rem; /* 上部に1.5文字分の外部余白を設定 */
  }

  /* class="my-social"の中のli */
.my-social li {
    line-height: 1; /* 文字高さを1文字分とする */
    margin-right: 1rem; /* 右側に1文字分の外側余白をつける */
    font-size: 2rem; /* アイコン(文字)のサイズを2文字分とする */
  }

  /* class="my-social"の中のliの中のa */
  .my-social li a {
    display: inline-block; /* リンクテキストをインラインブロック要素として表示 */
    text-decoration: none;  /* リンクテキストの装飾をなくす */
    color: var(--text-color);  /* 文字色をデフォルトのリンクカラーからこの文書の文字色へ変更 */
    cursor: pointer; /* この要素にマウスオーバーしたとき、マウスカーソルを指に変更 */
    /* 変更 : transition: 1s color; ↓に変更 */
    transition: 0.5s transform, 0.5s color;
  
    /* 下記追加分 */
    /* 文字の背景にグラデーションを設定しておきます。（現時点ではcolorに色が付いているので、このグラデーションは見えません。） */
    background-image: linear-gradient(to right, #eea2a2 0%, #bbc1bf 19%, #57c6e1 42%, #b49fda 79%, #7ac5d8 100%);
    -webkit-background-clip: text;
    background-clip: text;
  }

  /* class="my-social"の中のliの中のaにマウスカーソルが乗った時 */
.my-social li a:hover {
    color: transparent; /* 背景に設定したグラデーションが表示されるように文字色を透明（transparent）にする */
    transform: scale(1.5); /* 要素を1.5倍に変形させます */
  }

  /* bodyとmainの間に差し込まれるフィルタ要素 */
.background-filter {
    width: 100%;  /* bodyタグと同じ大きさにする */
    height: 100%;  /* bodyタグと同じ大きさにする */
    position: fixed; /* bodyタグの開始位置を基準として、位置を固定します */
    top: 0; /* bodyタグの開始位置を基準として、位置を固定します */
    left: 0; /* bodyタグの開始位置を基準として、位置を固定します */
  
    z-index: -1; /* フィルタ要素自体の重ね合わせ位置を最下部にする（bodyの上、mainの下） */
  
    /* 背景色と背景グラデーションの設定 */
    background-color: #E4E4E1;
    background-image: radial-gradient(at top center, rgba(255,255,255,0.03) 0%, rgba(0,0,0,0.03) 100%), linear-gradient(to top, rgba(255,255,255,0.1) 0%, rgba(143,152,157,0.60) 100%);
      background-blend-mode: normal, multiply;
    background-attachment: fixed;
  
    /* 透明度の設定 */
    opacity: 0.5;
  }

  .my-photo figure {
    position: relative; /* 縁取り要素を追加する前に、親コンテナ(figure)の配置方法を相対配置に変更 */
  }
  .circle1,
  .circle2,
  .circle3 {
    position: absolute; /* 縁取り要素は絶対配置（基準位置は、これらの要素から親を辿って最初にposition:relativeが設定されている箇所になります。なければbodyが基準です。） */
    top: 0; /* .my-photoの開始位置と揃える */
    width: 100%;
    height: 100%;
    border-radius: 40%; /* 40%の角丸めで歪な形を作成しておく */
    z-index: -1; /* 画像と背景の間に重ねる */
  }
  
  /* rotationという名前のアニメーションを作成 */
@keyframes rotation {
    from {  /* 開始時点の装飾 */
      transform: rotate(0deg);  /* 変形操作の内、回転0度 */
    }
  
    to {  /* 終了時点の装飾 */
      transform: rotate(360deg); /* 変形操作の内、回転360度 */
    }
  }

  .circle1 {
    opacity: 0.1; /* 透明度 */
    background: rgb(0, 8, 255); /* 縁取りの色設定 */
    transform-origin: 50% 47%;  /* transformの基準位置を変更 */
    animation: rotation 5s infinite linear; /* rotationアニメーションの秒数と繰り返し、変化を線形に変更 */
  }
  
  .circle2 {
    opacity: 0.3;
    background: rgb(0, 140, 172);
    transform-origin: 52% 48%;
    animation: rotation 12s infinite linear;
  }
  
  .circle3 {
    opacity: 0.2;
    background: rgb(0, 217, 255);
    transform-origin: 48% 52%;
    animation: rotation 8s infinite linear;
  }